---
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaNotificationTemplate
metadata:
  name: testdata
spec:
  name: emailtestdata
  instanceSelector:
    matchLabels:
      test: ($test.metadata.name)
  resyncPeriod: 3s
  template: |
    {{ define "emailAlert" }}
      [{{.Status}}] {{ .Labels.alertname }}
      {{ .Annotations.AlertValues }}
    {{ end }}

    {{ define "emailAlertMessage" }}
      {{ if gt (len .Alerts.Firing) 0 }}
        {{ len .Alerts.Firing }} firing:
        {{ range .Alerts.Firing }} {{ template "emailAlert" . }} {{ end }}
      {{ end }}
      {{ if gt (len .Alerts.Resolved) 0 }}
        {{ len .Alerts.Resolved }} resolved:
        {{ range .Alerts.Resolved }} {{ template "emailAlert" . }} {{ end }}
      {{ end }}
    {{ end }}

    {{ template "emailAlertMessage" . }}
---
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaContactPoint
metadata:
  name: testdata
spec:
  name: testdata
  type: email
  instanceSelector:
    matchLabels:
      test: ($test.metadata.name)
  resyncPeriod: 3s
  settings:
    addresses: "void@testdata.invalid"
---
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaNotificationPolicy
metadata:
  name: testdata
spec:
  instanceSelector:
    matchLabels:
      test: ($test.metadata.name)
  resyncPeriod: 3s
  route:
    receiver: grafana-default-email
    group_by:
      - grafana_folder
      - alertname
    routes:
      - receiver: grafana-default-email
        object_matchers:
          - - team
            - =
            - a
        routeSelector:
          matchLabels:
            team-a: "child"
---
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaNotificationPolicyRoute
metadata:
  labels:
    team-a: "child"
  name: team-b
spec:
  receiver: grafana-default-email
  object_matchers:
    - - team
      - =
      - b
  routeSelector:
    matchLabels:
      team-b: "child"
---
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaNotificationPolicyRoute
metadata:
  labels:
    team-b: "child"
  name: team-c
spec:
  receiver: grafana-default-email
  object_matchers:
    - - team
      - =
      - c
---
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaNotificationPolicyRoute
metadata:
  labels:
    team-a: "child"
  name: team-d
spec:
  receiver: grafana-default-email
  object_matchers:
    - - team
      - =
      - d
---
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaFolder
metadata:
  name: testdata
spec:
  resyncPeriod: 3s
  instanceSelector:
    matchLabels:
      test: ($test.metadata.name)
  uid: testdata-uid
  title: "Test Data"
---
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDatasource
metadata:
  name: testdata
spec:
  resyncPeriod: 3s
  instanceSelector:
    matchLabels:
      test: "($test.metadata.name)"
  datasource:
    orgId: 1
    isDefault: true
    uid: grafana-testdata
    name: grafana-testdata-datasource
    type: grafana-testdata-datasource
    access: proxy
    basicAuth: false
---
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaMuteTiming
metadata:
  name: testdata
spec:
  resyncPeriod: 3s
  instanceSelector:
    matchLabels:
      test: "($test.metadata.name)"
  name: testdata
  editable: false
  time_intervals:
    - times:
        - start_time: "20:00"
          end_time: "23:59"
        - start_time: "00:00"
          end_time: "06:00"
      weekdays: [saturday, sunday]
      location: Europe/Amsterdam
---
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaAlertRuleGroup
metadata:
  name: testdata
spec:
  folderRef: testdata
  resyncPeriod: 3s
  instanceSelector:
    matchLabels:
      test: ($test.metadata.name)
  interval: 5m
  rules:
    - uid: ae1rhq
      title: Test
      condition: C
      data:
        - refId: A
          relativeTimeRange:
            from: 600
            to: 0
          datasourceUid: grafana-testdata
          model:
            drop: 0
            intervalMs: 1000
            labels: ""
            max: 50
            maxDataPoints: 43200
            min: -50
            noise: 0
            refId: A
            scenarioId: random_walk
            seriesCount: 3
            spread: 5
            startValue: 0
            stringInput: 1,20,90,30,5,0
        - refId: B
          relativeTimeRange:
            from: 600
            to: 0
          datasourceUid: __expr__
          model:
            conditions:
              - evaluator:
                  params:
                    - 0
                    - 0
                  type: gt
                operator:
                  type: and
                query:
                  params: []
                reducer:
                  params: []
                  type: avg
                type: query
            datasource:
              name: Expression
              type: __expr__
              uid: __expr__
            expression: A
            hide: false
            intervalMs: 1000
            maxDataPoints: 43200
            reducer: max
            refId: B
            settings:
              mode: dropNN
            type: reduce
        - refId: C
          relativeTimeRange:
            from: 600
            to: 0
          datasourceUid: __expr__
          model:
            conditions:
              - evaluator:
                  params:
                    - 45
                    - 0
                  type: gt
                operator:
                  type: and
                query:
                  params: []
                reducer:
                  params: []
                  type: avg
                type: query
            datasource:
              name: Expression
              type: __expr__
              uid: __expr__
            expression: B
            hide: false
            intervalMs: 1000
            maxDataPoints: 43200
            refId: C
            type: threshold
      noDataState: NoData
      execErrState: Error
      for: 5m
      annotations: {}
      labels: {}
      isPaused: false
---
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDashboard
metadata:
  name: testdata
spec:
  folderRef: testdata
  resyncPeriod: 3s
  instanceSelector:
    matchLabels:
      test: "($test.metadata.name)"
  json: >
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "grafana",
              "uid": "-- Grafana --"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "links": [],
      "panels": [
        {
          "datasource": {
            "type": "grafana-testdata-datasource",
            "uid": "grafana-testdata"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "id"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 72
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 2,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "10.4.3",
          "targets": [
            {
              "datasource": {
                "type": "grafana-testdata-datasource",
                "uid": "grafana-testdata"
              },
              "refId": "A",
              "scenarioId": "grafana_api",
              "stringInput": "datasources"
            }
          ],
          "title": "Panel Title",
          "type": "table"
        },
        {
          "datasource": {
            "type": "grafana-testdata-datasource",
            "uid": "grafana-testdata"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 24,
            "x": 0,
            "y": 8
          },
          "id": 1,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true
          },
          "pluginVersion": "10.4.3",
          "targets": [
            {
              "datasource": {
                "type": "grafana-testdata-datasource",
                "uid": "grafana-testdata"
              },
              "hide": false,
              "refId": "A",
              "scenarioId": "grafana_api",
              "stringInput": "search"
            }
          ],
          "title": "Panel Title",
          "type": "table"
        }
      ],
      "schemaVersion": 39,
      "tags": [],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "browser",
      "title": "New dashboard",
      "version": 0,
      "weekStart": ""
    }
---
# Last to be cleaned up first
apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: testdata
  labels:
    test: ($test.metadata.name)
spec:
  config:
    log:
      mode: "console"
    auth:
      disable_login_form: "false"
    security:
      admin_user: ($USER)
      admin_password: ($PASS)
