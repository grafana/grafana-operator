# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: datasource-variable-substitution
spec:
  bindings:
    - name: USER
      value: root
    - name: PASS
      value: secret
  steps:
    - name: Create resources
      try:
        - apply:
            file: ./resources.yaml

        - assert:
            resource:
              apiVersion: v1
              kind: Pod
              metadata:
                (contains(name, 'testdata-deployment')): true

        - wait:
            apiVersion: v1
            kind: Pod
            timeout: 1m
            for:
              condition:
                name: Ready
                value: 'true'

        - assert:
            resource:
              apiVersion: grafana.integreatly.org/v1beta1
              kind: Grafana
              metadata:
                name: testdata
              status:
                stage: complete
                stageStatus: success

        - assert:
            resource:
              apiVersion: grafana.integreatly.org/v1beta1
              kind: GrafanaDatasource
              metadata:
                name: grafanadatasource-sample
              status:
                conditions:
                - reason: ApplySuccessful
                  status: "True"
                  type: DatasourceSynchronized

    - name: Ensure data source exists in Grafana
      try:
        - apply:
            resource:
              apiVersion: batch/v1
              kind: Job
              metadata:
                name: folder-curl
              spec:
                backoffLimit: 1
                template:
                  spec:
                    restartPolicy: Never
                    containers:
                      - name: curl
                        image: alpine/curl:latest
                        command: ["ash", "-c"]
                        args:
                          - |
                            curl --fail --silent --show-error \
                              -u ${BASIC_USER}:${BASIC_PASS} \
                              "http://testdata-service.${NS}.svc:3000/api/datasources/uid/testdata-uid" > /tmp/response.json || exit 1;
                              grep 'customTraceId' /tmp/response.json || exit 1;
                              grep 'demo.promlabs.com' /tmp/response.json || exit 1;
                        env:
                          - name: BASIC_USER
                            value: ($USER)
                          - name: BASIC_PASS
                            value: ($PASS)
                          - name: NS
                            value: ($namespace)
        - assert:
            resource:
              apiVersion: batch/v1
              kind: Job
              metadata:
                name: folder-curl
              status:
                (conditions[?type == 'Complete']):
                  - status: "True"
        - delete:
            ref:
              apiVersion: batch/v1
              kind: Job
              name: folder-curl
