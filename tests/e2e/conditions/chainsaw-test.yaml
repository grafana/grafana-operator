# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: validate-conditions
spec:
  bindings:
    - name: USER
      value: root
    - name: PASS
      value: secret
  steps:
    # Normal everything works
    - name: Create Grafana instance with testdata resources
      try:
        - apply:
            file: ../testdata-resources.yaml

        - assert:
            resource:
              apiVersion: v1
              kind: Pod
              metadata:
                (contains(name, 'testdata-deployment')): true

        - wait:
            apiVersion: v1
            kind: Pod
            timeout: 1m
            for:
              condition:
                name: Ready
                value: 'true'

        - assert:
            resource:
              apiVersion: grafana.integreatly.org/v1beta1
              kind: Grafana
              metadata:
                name: testdata
              status:
                stage: complete
                stageStatus: success

        - assert:
            file: "../testdata-assertions.yaml"

    # reason: NoMatchingInstances
    - name: Alter Grafana instance label
      try:
        - patch:
            resource:
              apiVersion: grafana.integreatly.org/v1beta1
              kind: Grafana
              metadata:
                name: testdata
                labels:
                  test: MatchNothing

        - assert:
            file: "./01-no-matching-instances-assertions.yaml"

    - name: Revert Grafana instance to default
      try: &RevertResources
        - apply:
            file: "../testdata-resources.yaml"

        - assert:
            file: "../testdata-assertions.yaml"

    # reason: ApplyFailed
    - name: Scale Grafana deployment to zero and skip readiness check
      try:
        - patch:
            resource:
              apiVersion: grafana.integreatly.org/v1beta1
              kind: Grafana
              metadata:
                name: testdata
                annotations:
                  # Disables the check that would otherwise omit the instance from reconciliation.
                  # Without this a NoMatchingInstances condition would be added to the status instead.
                  grafana-operator/skip-readiness-check: "true"
              spec:
                deployment:
                  spec:
                    replicas: 0

        - assert:
            file: "./02-apply-failed-assertions.yaml"

        - patch:
            resource:
              apiVersion: grafana.integreatly.org/v1beta1
              kind: Grafana
              metadata:
                name: testdata
                annotations:
                  grafana-operator/skip-readiness-check: "false"
              spec:
                deployment:
                  spec:
                    replicas: 1

    - name: Revert Grafana instance to default
      try: *RevertResources

    # reason: InvalidSpec
    - name: Invalidate resource specs
      try:
        - patch:
            file: "./03-testdata-invalid-specs.yaml"

        - apply:
            file: "./03-additional-invalid-spec.yaml"

        - assert:
            file: "./03-invalid-spec-assertions.yaml"
