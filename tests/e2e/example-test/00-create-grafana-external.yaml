apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana-internal
  labels:
    dashboards: "grafana-internal"
spec:
  client:
    preferIngress: false
    useKubeAuth: true
  config:
    log:
      mode: "console"
    auth:
      disable_login_form: "false"
    auth.jwt:
      enabled: "true"
      header_name: Authorization
      username_claim: sub
      email_claim: sub
      auto_sign_up: "true"
      role_attribute_path: "contains(\"kubernetes.io\".namespace, 'grafana') && 'GrafanaAdmin' || 'None'" # Assigns normal Admin unless allow_assign_grafana_admin is enabled
      role_attribute_strict: "true" # Disables auto_assign_org_role
      jwk_set_url: https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT_HTTPS}/openid/v1/jwks
      jwk_set_bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      tls_client_ca: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  deployment:
    spec:
      template:
        spec:
          containers:
            - name: grafana
              readinessProbe:
                periodSeconds: 2
  ingress:
    spec:
      ingressClassName: nginx
      rules:
        - host: test.io
          http:
            paths:
              - backend:
                  service:
                    name: grafana-internal-service
                    port:
                      number: 3000
                path: /
                pathType: Prefix
---
# Use the same grafana instance that we just created, notice the ingress config
apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana-external
  labels:
    dashboards: grafana-external
spec:
  external:
    url: (join('',['http://grafana-internal-service.',$namespace,':3000']))
    adminPassword:
      name: grafana-internal-admin-credentials
      key: GF_SECURITY_ADMIN_PASSWORD
    adminUser:
      name: grafana-internal-admin-credentials
      key: GF_SECURITY_ADMIN_USER
