permissions:
  contents: read

name: PR Validation

on:
  pull_request:
  merge_group:

jobs:
  ###
  ## Jobs that do not rely on bingo
  ###

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - uses: pre-commit/action@v3.0.1

  docs_only_check:
    name: Check for docs-only change
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      docs_only: ${{ steps.docs_only_check.outputs.docs_only }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: changed-files
        name: Get changed files
        uses: step-security/changed-files@3dbe17c78367e7d60f00d78ae6781a35be47b4a1 # v45.0.1
        with:
          files_ignore: |
            **/*.md
            **/*.html
            hugo/**

      - id: which_files
        name: Which files was changed
        run: |
          echo "One or more files has changed."
          echo "List all the files that have changed: ${{ steps.changed-files.outputs.all_changed_files }}"
          echo "What is any changed ${{ steps.changed-files.outputs.any_changed }}"

      - id: docs_only_check
        if: steps.changed-files.outputs.any_changed != 'true'
        name: Check for docs-only changes
        run: echo "docs_only=true" >> $GITHUB_OUTPUT

  trivy:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          severity: "CRITICAL,HIGH"

  ###
  ## Jobs that DO rely on bingo
  ###

  bingo-tools:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dart-sass
        uses: ./.github/actions/install-dart-sass

      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: false

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: bingo-${{ runner.os }}-go-${{ hashFiles('.bingo/*.sum') }}
          restore-keys: |
            bingo-${{ runner.os }}-go-

      - uses: actions/cache@v4
        with:
          path: |
            ~/go/bin
          key: bingo-bin-${{ runner.os }}-go-${{ hashFiles('.bingo/*.sum', '.bingo/*.mod') }}
          restore-keys: |
            bingo-bin-${{ runner.os }}-go-

      - name: Install hugo
        run: |
          make install/hugo

      - name: Get all tools using bingo
        run: |
          make bingo/get-all

  hugo:
    needs:
      - bingo-tools
    uses: ./.github/workflows/_hugo.yaml
    secrets: inherit

  test:
    needs:
      - bingo-tools
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4

      - name: Restore ~/go/bin
        uses: ./.github/actions/bingo-restore

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Run test
        run: |
          make test

      - name: Check if working tree is dirty
        run: |
          if [[ $(git status --porcelain) ]]; then
            git diff
            echo '::error::run make test and commit changes'
            exit 1
          fi

  e2e-tests:
    needs:
      - bingo-tools
      - docs_only_check
    name: e2e on kind ${{ matrix.version }}
    runs-on: ubuntu-latest
    if: (needs.docs_only_check.outputs.docs_only != 'true')
    env:
      KUBECONFIG: /home/runner/.kube/kind-grafana-operator-e2e
    strategy:
      matrix:
        version:
          - v1.27.13
          - v1.30.10
          - v1.31.6
          - v1.32.2
    steps:
      - name: Clone repo and checkout
        uses: actions/checkout@v4

      - name: Restore ~/go/bin
        uses: ./.github/actions/bingo-restore

      - name: Install go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: ${{ matrix.version }}

      - name: Create KinD cluster ${{ matrix.version }}
        id: kind
        env:
          KIND_CLUSTER_VERSION: ${{ matrix.version }}
        run: |
          make e2e-kind

      - name: Build and load images
        run: |
          make ko-build-kind

      - name: Run e2e tests
        shell: bash
        run: |
          # Run e2e
          VERSION=latest make e2e

      - name: Debug failure
        if: failure()
        run: |
          set -e
          kubectl version
          kubectl -n $NAMESPACE get all
          kubectl -n $NAMESPACE get grafana
          kubectl get crd
          POD=$(kubectl get pods -n $NAMESPACE -l app.kubernetes.io/name=grafana-operator --output='jsonpath={.items[].metadata.name}')
          echo "pod logs"
          kubectl logs -n $NAMESPACE $POD -c manager
          echo "previous pod logs (if any)"
          kubectl logs -p -n $NAMESPACE $POD -c manager || true

  end-to-end:
    runs-on: ubuntu-latest
    needs:
      - e2e-tests
    steps:
      - run: |
          echo "All E2E tests ran successfully"
